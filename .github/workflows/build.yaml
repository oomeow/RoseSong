name: Build Rosesong

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-bin:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Ubuntu Dependencies (glib & gstreamer)
        run: |
          sudo apt-get update
          sudo apt-get install -y libglib2.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Build Rosesong
        run: cargo build --release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            target/release/rosesong
            target/release/rsg
          if-no-files-found: error

  deb-control-file-build:
    needs: [build-bin]
    name: Generate Debian Package
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Copy Artifacts to Debian Directory
        run: cp -r ./artifacts/* ./debian/input/

      - name: Generate Control File
        id: control-gen
        uses: Nightwind-Developments/debian-control-file-builder@latest
        with:
          config-file: "debian/control_file_generate/template.json"
          deps-file: "debian/control_file_generate/dependencies.txt"
          output-path: "debian/input/"

      - name: Prints Output File Path
        run: echo "${{ steps.control-gen.outputs.control_file_path }}"

      - name: Confirms Control File is Present
        run: ls ${{ steps.control-gen.outputs.control_file_path }}

      - name: Prints Contents of Input Resources
        run: ls -l debian/input/

      - name: Build Docker Container & Run Debian Packer
        uses: Nightwind-Developments/debian-packer@latest
        id: container
        with:
          input_dir: "debian/input"
          output_dir: "output"
          layout_map_file: "debian/rosesong-map.json"
          package_name: "rosesong"
          package_version: "1.0.0"
          package_arch: "amd64"

      - name: Copy Generated Package to Artifacts Directory
        run: cp ${{ steps.container.outputs.generated_package_path }} ./artifacts/

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: alpha
          name: "Rosesong Alpha"
          prerelease: true
          body: "This is a alpha version of Rosesong."
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./artifacts/*
